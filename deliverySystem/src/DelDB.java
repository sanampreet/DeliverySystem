
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author HP INDIA
 */
public class DelDB extends javax.swing.JInternalFrame {

    /**
     * Creates new form AddDeliveryBoy
     */
    public DelDB() {
        initComponents();
       
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jScrollPane2.setViewportView(jEditorPane1);

        setClosable(true);
        setIconifiable(true);

        jLabel2.setText("Name");

        jLabel6.setText("ID");

        jButton2.setText("SEARCH");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("SEARCH");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Contact", "Age", "Address", "Joining date", "From", "To", "Salary"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);

        jLabel1.setText("Image");

        jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 208, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(368, 368, 368)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(323, 323, 323)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(16, 16, 16)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try
        {
            Connection myconnection;
            String path="jdbc:mysql://localhost/";
            String place="deliverysystem";
            String username="root";
            String password="";
            myconnection=DriverManager.getConnection(path+place,username,password);
            try
            {
                
                String q="select * from addboy where  Id=?";
                PreparedStatement mystatement=myconnection.prepareStatement(q);
                  mystatement.setString(1, jFormattedTextField2.getText());
                  ResultSet myresult=mystatement.executeQuery();
                  DefaultTableModel mymodel=(DefaultTableModel)jTable1.getModel();
                  if(myresult.next())
                  {
                     
                      mymodel.setRowCount(0);
                      do
                      {String Id,Name,Contact,Age,Joining_date,to,from,Address,Salary;
                       
                       Id=myresult.getString("Id");
                       Name=myresult.getString("Name");
                       Contact=myresult.getString("Contact");
                       Age=myresult.getString("Age");
                       Address=myresult.getString("Address");
                       Joining_date=myresult.getString("joiningdate");
                      from=myresult.getString("fromT");
                       to=myresult.getString("toT");
                       Salary=myresult.getString("Salary");
                     
                   
                       mymodel.addRow(new Object[]{Id,Name,Contact,Age,Address,Joining_date,to,from,Salary});
                   }
                   while(myresult.next());
                     
            }   
                  else
                  {
                         JOptionPane.showMessageDialog(rootPane, "No data found");
                  }
                
               
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error"+e.getMessage());
            }
            finally
            {
                myconnection.close();
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error"+e.getMessage());
            
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         try
        {
            Connection myconnection;
            String path="jdbc:mysql://localhost/";
            String place="deliverysystem";
            String username="root";
            String password="";
            myconnection=DriverManager.getConnection(path+place,username,password);
         try{
            
                String q="select * from addboy where  name like ?";
                PreparedStatement mystatement=myconnection.prepareStatement(q);
                  mystatement.setString(1, jTextField1.getText()+'%');
                  ResultSet myresult=mystatement.executeQuery();
                  DefaultTableModel mymodel=(DefaultTableModel)jTable1.getModel();
                  if(myresult.next())
                  {
                      mymodel.setRowCount(0);
                      do
                      {String Id,Name,Contact,Age,Joining_date,Working_hours,Address,Salary;
                       
                       Id=myresult.getString("id");
                       Name=myresult.getString("Name");
                       Contact=myresult.getString("contact");
                       Age=myresult.getString("age");
                       Address=myresult.getString("address");
                       Joining_date=myresult.getString("joiningdate");
                       Working_hours=myresult.getString("working hours");
                       Salary=myresult.getString("salary");
                     
                   
                       mymodel.addRow(new Object[]{Id,Name,Contact,Age,Joining_date,Working_hours,Address,Salary});
                   }
                   while(myresult.next());
                     
            }   
                  else
                  {
                         JOptionPane.showMessageDialog(rootPane, "No data found");
                  }
                
               
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error"+e.getMessage());
            }
            finally
            {
                myconnection.close();
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error"+e.getMessage());
            
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
int row=jTable1.getSelectedRow();
       int col=0;
       String Id=(String) jTable1.getValueAt(row,col);      
        try
        {
            Connection myconnection;
            String path="jdbc:mysql://localhost/";
            String place="deliverysystem";
            String username="root";
            String password="";
            myconnection=DriverManager.getConnection(path+place,username,password);
         try
         {
             String q="select * from addboy where Id=?";
             PreparedStatement mystatement=myconnection.prepareStatement(q);
                  mystatement.setString(1, Id);
                  ResultSet myresult=mystatement.executeQuery();
                  if(myresult.next())
                  {
                     jLabel11.setIcon(new ImageIcon(ImageIO.read(new File(myresult.getString("Photograph")))));
                  }
         }
         
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error"+e.getMessage());
            }
            finally
            {
                myconnection.close();
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error"+e.getMessage());
            
        }
           
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       int row=jTable1.getSelectedRow();
       int col=0;
       String Id=(String) jTable1.getValueAt(row,col);  
        int result=JOptionPane.showConfirmDialog(rootPane, "Do you realy want to delete ?", "Confirm",JOptionPane.YES_NO_OPTION); 
         if(result==JOptionPane.YES_OPTION)  
        
        try
        {
            Connection myconnection;
            String path="jdbc:mysql://localhost/";
            String place="deliverysystem";
            String username="root";
            String password="";
            myconnection=DriverManager.getConnection(path+place,username,password);
            try
            {
               
                String q="delete from addboy where Id=?";
                PreparedStatement mystatement=myconnection.prepareStatement(q);
                  mystatement.setString(1, Id);
              
                
                
                if(mystatement.executeUpdate()>0)                
                {
                    JOptionPane.showMessageDialog(rootPane, "Deleted  succesfully");
                    DefaultTableModel mymodel=(DefaultTableModel)jTable1.getModel();
                    
                    mymodel.removeRow((jTable1.getSelectedRow()));
                  jLabel11.setIcon(null);
                jFormattedTextField2.setText("");
                jTextField1.setText("");
                    
                    
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error"+e.getMessage());
            }
            finally
            {
                myconnection.close();
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error"+e.getMessage());
        }   
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
